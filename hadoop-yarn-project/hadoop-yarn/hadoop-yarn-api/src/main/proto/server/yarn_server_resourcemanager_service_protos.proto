/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * These .proto interfaces are private and stable.
 * Please see http://wiki.apache.org/hadoop/Compatibility
 * for what changes are allowed for a *stable* .proto interface.
 */

option java_package = "org.apache.hadoop.yarn.proto";
option java_outer_classname = "YarnServerResourceManagerServiceProtos";
option java_generic_services = true;
option java_generate_equals_and_hash = true;
package hadoop.yarn;

import "yarn_protos.proto";

message RefreshQueuesRequestProto {
}
message RefreshQueuesResponseProto {
}

message RefreshNodesRequestProto {
}
message RefreshNodesResponseProto {
}

message RefreshSuperUserGroupsConfigurationRequestProto {
}
message RefreshSuperUserGroupsConfigurationResponseProto {
}

message RefreshUserToGroupsMappingsRequestProto {
}
message RefreshUserToGroupsMappingsResponseProto {
}

message RefreshAdminAclsRequestProto {
}
message RefreshAdminAclsResponseProto {
}

message RefreshServiceAclsRequestProto {
}
message RefreshServiceAclsResponseProto {
}

message GetGroupsForUserRequestProto {
  required string user = 1;
}

message GetGroupsForUserResponseProto {
  repeated string groups = 1;
}

message UpdateNodeResourceRequestProto {
  repeated NodeResourceMapProto node_resource_map = 1;
}

message UpdateNodeResourceResponseProto {
}

////////////////////////////////////////////////////////////////////////
////// RM recovery related records /////////////////////////////////////
////////////////////////////////////////////////////////////////////////
enum RMAppAttemptStateProto {
  RMATTEMPT_NEW = 1;
  RMATTEMPT_SUBMITTED = 2;
  RMATTEMPT_SCHEDULED = 3;
  RMATTEMPT_ALLOCATED = 4;
  RMATTEMPT_LAUNCHED = 5;
  RMATTEMPT_FAILED = 6;
  RMATTEMPT_RUNNING = 7;
  RMATTEMPT_FINISHING = 8;
  RMATTEMPT_FINISHED = 9;
  RMATTEMPT_KILLED = 10;
  RMATTEMPT_ALLOCATED_SAVING = 11;
  RMATTEMPT_LAUNCHED_UNMANAGED_SAVING = 12;
  RMATTEMPT_RECOVERED = 13;
  RMATTEMPT_FINAL_SAVING = 14;
}

enum RMAppStateProto {
  RMAPP_NEW = 1;
  RMAPP_NEW_SAVING = 2;
  RMAPP_SUBMITTED = 3;
  RMAPP_ACCEPTED = 4;
  RMAPP_RUNNING = 5;
  RMAPP_FINAL_SAVING = 6;
  RMAPP_FINISHING = 7;
  RMAPP_FINISHED = 8;
  RMAPP_FAILED = 9;
  RMAPP_KILLED = 10;
}

message ApplicationStateDataProto {
  optional int64 submit_time = 1;
  optional ApplicationSubmissionContextProto application_submission_context = 2;
  optional string user = 3;
  optional int64 start_time = 4;
  optional RMAppStateProto application_state = 5;
  optional string diagnostics = 6 [default = "N/A"];
  optional int64 finish_time = 7;
}

message ApplicationAttemptStateDataProto {
  optional ApplicationAttemptIdProto attemptId = 1;
  optional ContainerProto master_container = 2;
  optional bytes app_attempt_tokens = 3;
  optional RMAppAttemptStateProto app_attempt_state = 4;
  optional string final_tracking_url = 5;
  optional string diagnostics = 6 [default = "N/A"];
  optional int64 start_time = 7;
  optional FinalApplicationStatusProto final_application_status = 8;
  optional int32 am_container_exit_status = 9 [default = -1000];
}

message EpochProto {
  optional int64 epoch = 1;
}

//////////////////////////////////////////////////////////////////
///////////// RM Failover related records ////////////////////////
//////////////////////////////////////////////////////////////////
message ActiveRMInfoProto {
  optional string clusterId = 1;
  optional string rmId = 2;
}
